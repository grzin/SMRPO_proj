/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    projects: Project;
    sprints: Sprint;
    stories: Story;
    taskTimes: TaskTime;
    timeTracking: TimeTracking;
    'wall-messages': WallMessage;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    sprints: SprintsSelect<false> | SprintsSelect<true>;
    stories: StoriesSelect<false> | StoriesSelect<true>;
    taskTimes: TaskTimesSelect<false> | TaskTimesSelect<true>;
    timeTracking: TimeTrackingSelect<false> | TimeTrackingSelect<true>;
    'wall-messages': WallMessagesSelect<false> | WallMessagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    username: string;
  };
  login: {
    password: string;
    username: string;
  };
  registerFirstUser: {
    password: string;
    username: string;
  };
  unlock: {
    username: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  surname: string;
  role: 'admin' | 'user';
  loginDate?: string | null;
  lastLoginDate?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  username: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: number;
  name: string;
  description?: string | null;
  key?: string | null;
  members?:
    | {
        user: number | User;
        role: 'scrum_master' | 'scrum_master_developer' | 'product_owner' | 'product_owner_scrum_master' | 'developer';
        id?: string | null;
      }[]
    | null;
  stories?: (number | Story)[] | null;
  documentation?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stories".
 */
export interface Story {
  id: number;
  title: string;
  titleLowerCase: string;
  description: string;
  realized: boolean;
  rejectComment?: string | null;
  acceptanceTests: {
    test: string;
    id?: string | null;
  }[];
  priority: 'must have' | 'should have' | 'could have' | "won't have this time";
  businessValue: number;
  timeEstimate?: number | null;
  project: number | Project;
  sprint?: (number | null) | Sprint;
  tasks?:
    | {
        description: string;
        estimate: number;
        status: 'accepted' | 'pending' | 'unassigned' | 'active';
        taskedUser?: (number | null) | User;
        realized: boolean;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sprints".
 */
export interface Sprint {
  id: number;
  name: string;
  startDate: string;
  endDate: string;
  velocity: number;
  project: number | Project;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "taskTimes".
 */
export interface TaskTime {
  id: number;
  user: number | User;
  task: string;
  date: string;
  hours: number;
  minutes: number;
  seconds: number;
  est_hours: number;
  est_minutes: number;
  est_seconds: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "timeTracking".
 */
export interface TimeTracking {
  id: number;
  user: number | User;
  task: string;
  start: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wall-messages".
 */
export interface WallMessage {
  id: number;
  message: string;
  username: string;
  createdAt: string;
  project: number | Project;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'projects';
        value: number | Project;
      } | null)
    | ({
        relationTo: 'sprints';
        value: number | Sprint;
      } | null)
    | ({
        relationTo: 'stories';
        value: number | Story;
      } | null)
    | ({
        relationTo: 'taskTimes';
        value: number | TaskTime;
      } | null)
    | ({
        relationTo: 'timeTracking';
        value: number | TimeTracking;
      } | null)
    | ({
        relationTo: 'wall-messages';
        value: number | WallMessage;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  surname?: T;
  role?: T;
  loginDate?: T;
  lastLoginDate?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  username?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  key?: T;
  members?:
    | T
    | {
        user?: T;
        role?: T;
        id?: T;
      };
  stories?: T;
  documentation?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sprints_select".
 */
export interface SprintsSelect<T extends boolean = true> {
  name?: T;
  startDate?: T;
  endDate?: T;
  velocity?: T;
  project?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stories_select".
 */
export interface StoriesSelect<T extends boolean = true> {
  title?: T;
  titleLowerCase?: T;
  description?: T;
  realized?: T;
  rejectComment?: T;
  acceptanceTests?:
    | T
    | {
        test?: T;
        id?: T;
      };
  priority?: T;
  businessValue?: T;
  timeEstimate?: T;
  project?: T;
  sprint?: T;
  tasks?:
    | T
    | {
        description?: T;
        estimate?: T;
        status?: T;
        taskedUser?: T;
        realized?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "taskTimes_select".
 */
export interface TaskTimesSelect<T extends boolean = true> {
  user?: T;
  task?: T;
  date?: T;
  hours?: T;
  minutes?: T;
  seconds?: T;
  est_hours?: T;
  est_minutes?: T;
  est_seconds?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "timeTracking_select".
 */
export interface TimeTrackingSelect<T extends boolean = true> {
  user?: T;
  task?: T;
  start?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wall-messages_select".
 */
export interface WallMessagesSelect<T extends boolean = true> {
  message?: T;
  username?: T;
  createdAt?: T;
  project?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}